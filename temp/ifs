    //check if the opcode is a valid one
    Instruction ninst; 
    if(strcmp(inststring, "LOADMQ") == 0) {
       ninst.op = LOAD_MQ; 
    }
    else if(strcmp(inststring, "LOADMQMX") == 0) {
        ninst.op = LOAD_MQ_MX;
    }
    else if(strcmp(inststring, "STOR_MX") == 0) {
        ninst.op = STOR_MX;
    }
    else if(strcmp(inststring, "LOAD_MX") == 0) {
        ninst.op = LOAD_MX;
    }
    else if(strcmp(inststring, "LOAD_nMX") == 0) {
        ninst.op = LOAD_nMX;
    }
    else if(strcmp(inststring, "LOAD_aMX") == 0) {
        ninst.op = LOAD_aMX;
    }
    else if(strcmp(inststring, "LOAD_naMX") == 0) {
        ninst.op = LOAD_naMX;
    }
    else if(strcmp(inststring, "JUMP") == 0) {
        ninst.op = JUMP_lMX;
    }
    else if(strcmp(inststring, "CJUMP") == 0) {
        ninst.op = CJUMP_lMX;
    }
    else if(strcmp(inststring, "ADDMX") == 0) {
        ninst.op = ADD_MX;
    }
    else if(strcmp(inststring, "ADDAMX") == 0) {
        ninst.op = ADD_aMX;
    }
    else if(strcmp(inststring, "SUBMX") == 0) {
        ninst.op = SUB_MX;
    }
    else if(strcmp(inststring, "SUBAMX") == 0) {
        ninst.op = SUB_aMX;
    }
    else if(strcmp(inststring, "MULMX") == 0) {
        ninst.op = MUL_MX;
    }
    else if(strcmp(inststring, "DIVMX") == 0) {
        ninst.op = DIV_MX;
    }
    else if(strcmp(inststring, "LSH") == 0) {
        ninst.op = LSH;
    }
    else if(strcmp(inststring, "RSH") == 0) {
        ninst.op = RSH;
    }
    else if(strcmp(inststring, "STORAMX") == 0) {
        ninst.op = STOR_lMX;
    } else {
        fprintf(stderr, "ERROR: Invalid command %s found in program file.\n", inststring);
        return UNRECOGNIZED_COMMAND;
    }
